<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename type &apos;quantcast.dilip.codingTest.SpeadsheetValidator&apos; to &apos;SpreadsheetValidator&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.SpeadsheetValidator&apos;&#x0D;&#x0A;- Renamed element: &apos;quantcast.dilip.codingTest.SpreadsheetValidator&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;SpeadsheetValidator&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;quantcast.dilip.codingTest{SpeadsheetValidator.java[SpeadsheetValidator" matchStrategy="1" name="SpreadsheetValidator" qualified="false" references="true" similarDeclarations="false" stamp="1329010674579" textual="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;quantcast.dilip.codingTest.Expression.cellValue&apos; in &apos;quantcast.dilip.codingTest.Expression&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.Expression.cellValue&apos;&#x0D;&#x0A;- Getter method name: &apos;getCellValue&apos;&#x0D;&#x0A;- Setter method name: &apos;setCellValue&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;cellValue&apos;" flags="589830" getter="getCellValue" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;quantcast.dilip.codingTest{Expression.java[Expression^cellValue" insertion="0" setter="setCellValue" stamp="1329014093684" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;quantcast.dilip.codingTest.Expression.cellReference&apos; in &apos;quantcast.dilip.codingTest.Expression&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.Expression.cellReference&apos;&#x0D;&#x0A;- Getter method name: &apos;getCellReference&apos;&#x0D;&#x0A;- Setter method name: &apos;setCellReference&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type&#x0D;&#x0A;- Generate method comments" comments="true" declaring="true" description="Encapsulate field &apos;cellReference&apos;" flags="589830" getter="getCellReference" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;quantcast.dilip.codingTest{Expression.java[Expression^cellReference" insertion="2" setter="setCellReference" stamp="1329014099758" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;quantcast.dilip.codingTest.Expression.arithmeticExrpession&apos; in &apos;quantcast.dilip.codingTest.Expression&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.Expression.arithmeticExrpession&apos;&#x0D;&#x0A;- Getter method name: &apos;getArithmeticExrpession&apos;&#x0D;&#x0A;- Setter method name: &apos;setArithmeticExrpession&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;arithmeticExrpession&apos;" flags="589830" getter="getArithmeticExrpession" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;quantcast.dilip.codingTest{Expression.java[Expression^arithmeticExrpession" insertion="4" setter="setArithmeticExrpession" stamp="1329014127463" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Move element &apos;Rpn.java&apos; to &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Destination element: &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original element: &apos;Rpn.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;hw.hw2" element1="/src&lt;{Rpn.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1329038772119" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;tks&apos; in &apos;hw.hw2.Rpn.main(...)&apos; to &apos;evaluationStack&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;hw.hw2.Rpn.main(String[]).tks&apos;&#x0D;&#x0A;- Renamed element: &apos;tks&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;tks&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;hw.hw2{Rpn.java[Rpn~main~\[QString;@tks!285!324!299!301!QStack\&lt;QString;&gt;;!0!false" name="evaluationStack" references="true" stamp="1329082935637" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;tk&apos; in &apos;hw.hw2.Rpn.evalrpn(...)&apos; to &apos;currentCellValue&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;hw.hw2.Rpn.evalrpn(Stack&lt;String&gt;).tk&apos;&#x0D;&#x0A;- Renamed element: &apos;tk&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;tk&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;hw.hw2{Rpn.java[Rpn~evalrpn~QStack\&lt;QString;&gt;;@tk!864!897!871!872!QString;!0!false" name="currentCellValue" references="true" stamp="1329083247060" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;currentCellValue&apos; in &apos;hw.hw2.Rpn.evalrpn(...)&apos; to &apos;currentStackValue&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;hw.hw2.Rpn.evalrpn(Stack&lt;String&gt;).currentCellValue&apos;&#x0D;&#x0A;- Renamed element: &apos;currentCellValue&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;currentCellValue&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;hw.hw2{Rpn.java[Rpn~evalrpn~QStack\&lt;QString;&gt;;@currentCellValue!864!911!871!886!QString;!0!false" name="currentStackValue" references="true" stamp="1329083268649" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;hw.hw2.Rpn.evalrpn(...)&apos; to &apos;evaluateRPN&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;hw.hw2.Rpn.evalrpn(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;hw.hw2.Rpn.evaluateRPN(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;evalrpn&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;hw.hw2{Rpn.java[Rpn~evalrpn~QStack\&lt;QString;&gt;;" name="evaluateRPN" references="true" stamp="1329083544086" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Rename local variable &apos;lab&apos; in &apos;quantcast.dilip.codingTest.Graph.addVertex(...)&apos; to &apos;expression&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.Graph.addVertex(String).lab&apos;&#x0D;&#x0A;- Renamed element: &apos;lab&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;lab&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;quantcast.dilip.codingTest{CellGraph.java[Graph~addVertex~QString;@lab!809!818!816!818!QString;!0!true" name="expression" references="true" stamp="1329114304291" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;SpreadsheetEvaluator.java&apos; to &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.java&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Destination element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.java&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.java&apos;" description="Copy compilation unit" destination="/src&lt;quantcast.dilip.codingTest{SpreadsheetEvaluator.java" element1="/src&lt;quantcast.dilip.codingTest{SpreadsheetEvaluator.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1329278151280" units="1" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;CopyOfSpreadsheetEvaluator.java&apos; to &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Destination element: &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.CopyOfSpreadsheetEvaluator.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;hw.hw2" element1="/src&lt;quantcast.dilip.codingTest{CopyOfSpreadsheetEvaluator.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1329278158985" units="1" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;SpreadsheetEvaluator.java&apos; to &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Destination element: &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.java&apos;" description="Copy compilation unit" destination="/src&lt;hw.hw2" element1="/src&lt;quantcast.dilip.codingTest{SpreadsheetEvaluator.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1329278170316" units="1" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;cs61b&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;hw.hw2.SpreadsheetEvaluator.java&apos;" description="Delete element" element1="/src&lt;hw.hw2{SpreadsheetEvaluator.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1329278182297" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;baseStr&apos; in &apos;StringIndexTest.stringSearch(...)&apos; to &apos;baseString&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;StringIndexTest.stringSearch(String, String).baseStr&apos;&#x0D;&#x0A;- Renamed element: &apos;baseStr&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;baseStr&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{StringIndexTest.java[StringIndexTest~stringSearch~QString;~QString;@baseStr!287!300!294!300!QString;!0!true" name="baseString" references="true" stamp="1329293412791" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;compareStr&apos; in &apos;StringIndexTest.stringSearch(...)&apos; to &apos;subString&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;StringIndexTest.stringSearch(String, String).compareStr&apos;&#x0D;&#x0A;- Renamed element: &apos;compareStr&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;compareStr&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{StringIndexTest.java[StringIndexTest~stringSearch~QString;~QString;@compareStr!306!322!313!322!QString;!0!true" name="subString" references="true" stamp="1329293423344" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;compareLength&apos; in &apos;StringIndexTest.stringSearch(...)&apos; to &apos;subStringLength&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;StringIndexTest.stringSearch(String, String).compareLength&apos;&#x0D;&#x0A;- Renamed element: &apos;compareLength&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;compareLength&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{StringIndexTest.java[StringIndexTest~stringSearch~QString;~QString;@compareLength!477!514!481!493!I!0!false" name="subStringLength" references="true" stamp="1329293438888" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;baseStrCharArray&apos; in &apos;StringIndexTest.stringSearch(...)&apos; to &apos;baseStringCharArray&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;StringIndexTest.stringSearch(String, String).baseStrCharArray&apos;&#x0D;&#x0A;- Renamed element: &apos;baseStrCharArray&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;baseStrCharArray&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{StringIndexTest.java[StringIndexTest~stringSearch~QString;~QString;@baseStrCharArray!527!577!532!547!\[C!0!false" name="baseStringCharArray" references="true" stamp="1329293465931" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;src&apos; in &apos;StringIndexTest.main(...)&apos; to &apos;subString&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;StringIndexTest.main(String[]).src&apos;&#x0D;&#x0A;- Renamed element: &apos;src&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;src&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{StringIndexTest.java[StringIndexTest~main~\[QString;@src!82!100!89!91!QString;!0!false" name="subString" references="true" stamp="1329293545041" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;dest&apos; in &apos;StringIndexTest.main(...)&apos; to &apos;originalString&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;StringIndexTest.main(String[]).dest&apos;&#x0D;&#x0A;- Renamed element: &apos;dest&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;dest&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{StringIndexTest.java[StringIndexTest~main~\[QString;@dest!111!136!118!121!QString;!0!false" name="originalString" references="true" stamp="1329293555094" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;checkCyclicDependencySet&apos; in &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator&apos; to &apos;setToCheckCyclicDependency&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.checkCyclicDependencySet&apos;&#x0D;&#x0A;- Renamed element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.setToCheckCyclicDependency&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;checkCyclicDependencySet&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;quantcast.dilip.codingTest{SpreadsheetEvaluator.java[SpreadsheetEvaluator^checkCyclicDependencySet" name="setToCheckCyclicDependency" references="true" setter="false" stamp="1329352678355" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.constructRowNumbers(...)&apos; to &apos;constructCellValues&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.constructRowNumbers(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.constructCellValues(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;constructRowNumbers&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;quantcast.dilip.codingTest{SpreadsheetEvaluator.java[SpreadsheetEvaluator~constructRowNumbers~\[\[QString;" name="constructCellValues" references="true" stamp="1329352812502" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;cs61b&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.SpreadsheetValidator.java&apos;" description="Delete element" element1="/src&lt;quantcast.dilip.codingTest{SpreadsheetValidator.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1329352883501" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;Expression.java&apos; to &apos;quantcast.dilip.codingTest.Expression.java&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Destination element: &apos;quantcast.dilip.codingTest.Expression.java&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.Expression.java&apos;" description="Copy compilation unit" destination="/src&lt;quantcast.dilip.codingTest{Expression.java" element1="/src&lt;quantcast.dilip.codingTest{Expression.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1329352929512" units="1" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;CopyOfExpression.java&apos; to &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Destination element: &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.CopyOfExpression.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;hw.hw2" element1="/src&lt;quantcast.dilip.codingTest{CopyOfExpression.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1329352934290" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;quantcast.dilip.codingTest.Expression&apos; to &apos;RPNExpressionEvaluator&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.Expression&apos;&#x0D;&#x0A;- Renamed element: &apos;quantcast.dilip.codingTest.RPNExpressionEvaluator&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Expression&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;quantcast.dilip.codingTest{Expression.java[Expression" matchStrategy="1" name="RPNExpressionEvaluator" qualified="false" references="true" similarDeclarations="false" stamp="1329353053398" textual="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;SpreadsheetEvaluator.java&apos; to &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.java&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Destination element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.java&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.java&apos;" description="Copy compilation unit" destination="/src&lt;quantcast.dilip.codingTest{SpreadsheetEvaluator.java" element1="/src&lt;quantcast.dilip.codingTest{SpreadsheetEvaluator.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1329353184583" units="1" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;CopyOfSpreadsheetEvaluator1.java&apos; to &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Destination element: &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.CopyOfSpreadsheetEvaluator1.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;hw.hw2" element1="/src&lt;quantcast.dilip.codingTest{CopyOfSpreadsheetEvaluator1.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1329353190199" units="1" version="1.0"/>&#x0A;<refactoring comment="Move 4 elements to &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Destination element: &apos;cs61b/src/hw.hw2&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     quantcast.dilip.codingTest.GraphEvaluator.java&#x0D;&#x0A;     quantcast.dilip.codingTest.CellGraph.java&#x0D;&#x0A;     quantcast.dilip.codingTest.Vertex.java&#x0D;&#x0A;     quantcast.dilip.codingTest.Operators.java&#x0D;&#x0A;- Update references to refactored element" description="Move compilation units" destination="/src&lt;hw.hw2" element1="/src&lt;quantcast.dilip.codingTest{GraphEvaluator.java" element2="/src&lt;quantcast.dilip.codingTest{CellGraph.java" element3="/src&lt;quantcast.dilip.codingTest{Vertex.java" element4="/src&lt;quantcast.dilip.codingTest{Operators.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1329355832201" units="4" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;cyclicRefernceException&apos; in &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator&apos; to &apos;cyclicReferenceException&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.cyclicRefernceException&apos;&#x0D;&#x0A;- Renamed element: &apos;quantcast.dilip.codingTest.SpreadsheetEvaluator.cyclicReferenceException&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;cyclicRefernceException&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;quantcast.dilip.codingTest{SpreadsheetEvaluator.java[SpreadsheetEvaluator^cyclicRefernceException" name="cyclicReferenceException" references="true" setter="false" stamp="1329361932468" textual="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;intentmedia.dilip.codingTest.Product.pdtName&apos; in &apos;intentmedia.dilip.codingTest.Product&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.Product.pdtName&apos;&#x0D;&#x0A;- Getter method name: &apos;getPdtName&apos;&#x0D;&#x0A;- Setter method name: &apos;setPdtName&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;pdtName&apos;" flags="589830" getter="getPdtName" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;intentmedia.dilip.codingTest{Product.java[Product^pdtName" insertion="0" setter="setPdtName" stamp="1329451128039" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;intentmedia.dilip.codingTest.Product.pdtPrice&apos; in &apos;intentmedia.dilip.codingTest.Product&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.Product.pdtPrice&apos;&#x0D;&#x0A;- Getter method name: &apos;getPdtPrice&apos;&#x0D;&#x0A;- Setter method name: &apos;setPdtPrice&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;pdtPrice&apos;" flags="589830" getter="getPdtPrice" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;intentmedia.dilip.codingTest{Product.java[Product^pdtPrice" insertion="2" setter="setPdtPrice" stamp="1329451135530" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;intentmedia.dilip.codingTest.Product.pdtQty&apos; in &apos;intentmedia.dilip.codingTest.Product&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.Product.pdtQty&apos;&#x0D;&#x0A;- Getter method name: &apos;getPdtQty&apos;&#x0D;&#x0A;- Setter method name: &apos;setPdtQty&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;pdtQty&apos;" flags="589830" getter="getPdtQty" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;intentmedia.dilip.codingTest{Product.java[Product^pdtQty" insertion="4" setter="setPdtQty" stamp="1329451140844" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Rename local variable &apos;haystack&apos; in &apos;intentmedia.dilip.codingTest.PriceCalculator.countOccurrences(...)&apos; to &apos;pdtList&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.PriceCalculator.countOccurrences(String, char).haystack&apos;&#x0D;&#x0A;- Renamed element: &apos;haystack&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;haystack&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;intentmedia.dilip.codingTest{PriceCalculator.java[PriceCalculator~countOccurrences~QString;~C@haystack!368!382!375!382!QString;!0!true" name="pdtList" references="true" stamp="1329451805783" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;needle&apos; in &apos;intentmedia.dilip.codingTest.PriceCalculator.countOccurrences(...)&apos; to &apos;pdt&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.PriceCalculator.countOccurrences(String, char).needle&apos;&#x0D;&#x0A;- Renamed element: &apos;needle&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;needle&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;intentmedia.dilip.codingTest{PriceCalculator.java[PriceCalculator~countOccurrences~QString;~C@needle!384!394!389!394!C!0!true" name="pdt" references="true" stamp="1329451814839" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;intentmedia.dilip.codingTest.ProductSpec.count&apos; in &apos;intentmedia.dilip.codingTest.ProductSpec&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.ProductSpec.count&apos;&#x0D;&#x0A;- Getter method name: &apos;getCount&apos;&#x0D;&#x0A;- Setter method name: &apos;setCount&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;count&apos;" flags="589830" getter="getCount" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;intentmedia.dilip.codingTest{ProductSpec.java[ProductSpec^count" insertion="1" setter="setCount" stamp="1329453760637" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Rename field &apos;count&apos; in &apos;intentmedia.dilip.codingTest.ProductSpec&apos; to &apos;pdtQty&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.ProductSpec.count&apos;&#x0D;&#x0A;- Renamed element: &apos;intentmedia.dilip.codingTest.ProductSpec.pdtQty&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;count&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;intentmedia.dilip.codingTest{ProductSpec.java[ProductSpec^count" name="pdtQty" references="true" setter="false" stamp="1329453864554" textual="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;intentmedia.dilip.codingTest.ProductSpec.pdtPrice&apos; in &apos;intentmedia.dilip.codingTest.ProductSpec&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.ProductSpec.pdtPrice&apos;&#x0D;&#x0A;- Getter method name: &apos;getPdtPrice&apos;&#x0D;&#x0A;- Setter method name: &apos;setPdtPrice&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;pdtPrice&apos;" flags="589830" getter="getPdtPrice" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;intentmedia.dilip.codingTest{ProductSpec.java[ProductSpec^pdtPrice" insertion="3" setter="setPdtPrice" stamp="1329453874704" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Rename local variable &apos;c&apos; in &apos;intentmedia.dilip.codingTest.ProductSpec.ProductSpec(...)&apos; to &apos;name&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.ProductSpec.ProductSpec(char).c&apos;&#x0D;&#x0A;- Renamed element: &apos;c&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;c&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;intentmedia.dilip.codingTest{ProductSpec.java[ProductSpec~ProductSpec~C@c!236!241!241!241!C!0!true" name="name" references="true" stamp="1329454025028" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;pdtType&apos; in &apos;intentmedia.dilip.codingTest.ProductSpec&apos; to &apos;pdtName&apos;&#x0D;&#x0A;- Original project: &apos;cs61b&apos;&#x0D;&#x0A;- Original element: &apos;intentmedia.dilip.codingTest.ProductSpec.pdtType&apos;&#x0D;&#x0A;- Renamed element: &apos;intentmedia.dilip.codingTest.ProductSpec.pdtName&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;pdtType&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;intentmedia.dilip.codingTest{ProductSpec.java[ProductSpec^pdtType" name="pdtName" references="true" setter="false" stamp="1329454036529" textual="false" version="1.0"/>
</session>